name: publish.yml
on:
  workflow_dispatch:
    inputs:
      version:
        description: The version of the release
        required: true
        type: string

permissions:
  contents: write

jobs:
  pre-publish:
    runs-on: ubuntu-latest
    steps:
      - name: Check Tag
        id: check-tag
        run: |
          if [[ ! ${{ github.event.inputs.version }} =~ ^(0|[1-9][0-9]*)\.(0|[1-9][0-9]*)\.(0|[1-9][0-9]*)(-((0|[1-9][0-9]*|[0-9]*[a-zA-Z-][0-9a-zA-Z-]*)(\.(0|[1-9][0-9]*|[0-9]*[a-zA-Z-][0-9a-zA-Z-]*))*))?(\+([0-9a-zA-Z-]+(\.[0-9a-zA-Z-]+)*))?$ ]]; then
              exit 1
          fi

  publish:
    needs: pre-publish
    strategy:
      matrix:
        # Use these Java versions
        java: [
          21,    # Current Java LTS
        ]
    runs-on: ubuntu-latest
    steps:
      - name: checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: '0'

      - name: Generate Release Notes
        uses: orhun/git-cliff-action@v3
        id: changelog
        with:
          config: cliff.toml
          args: --verbose -t ${{ github.event.inputs.version }} --latest
        env:
          OUTPUT: CHANGELOG.md
          GITHUB_REPO: ${{ github.repository }}

      - name: validate gradle wrapper
        uses: gradle/actions/wrapper-validation@v4

      - name: setup jdk ${{ matrix.java }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.java }}
          distribution: 'microsoft'

      - name: make gradle wrapper executable
        run: chmod +x ./gradlew

      - name: Build and Publish with Gradle
        run: ./gradlew build publish publishMods -Pversion=${{ github.event.inputs.version }} --stacktrace
        env:
          MOD_VERSION: ${{ github.event.inputs.version }}
          MAVEN_URL: ${{ secrets.MAVEN_URL }}
          MAVEN_USERNAME: ${{ secrets.MAVEN_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.MAVEN_PASSWORD }}
          CURSEFORGE_API_KEY: ${{ secrets.CURSEFORGE_API_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          MODRINTH_TOKEN: ${{ secrets.MODRINTH_TOKEN }}
          CHANGELOG: ${{ steps.changelog.outputs.content }}